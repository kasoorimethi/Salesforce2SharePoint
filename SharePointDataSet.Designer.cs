//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Salesforce2SharePoint {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SharePointDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SharePointDataSet : global::System.Data.DataSet {
        
        private Salesforce予定表DataTable tableSalesforce予定表;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SharePointDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected SharePointDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Salesforce予定表"] != null)) {
                    base.Tables.Add(new Salesforce予定表DataTable(ds.Tables["Salesforce予定表"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Salesforce予定表DataTable Salesforce予定表 {
            get {
                return this.tableSalesforce予定表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SharePointDataSet cln = ((SharePointDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Salesforce予定表"] != null)) {
                    base.Tables.Add(new Salesforce予定表DataTable(ds.Tables["Salesforce予定表"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSalesforce予定表 = ((Salesforce予定表DataTable)(base.Tables["Salesforce予定表"]));
            if ((initTable == true)) {
                if ((this.tableSalesforce予定表 != null)) {
                    this.tableSalesforce予定表.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SharePointDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SharePointDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSalesforce予定表 = new Salesforce予定表DataTable();
            base.Tables.Add(this.tableSalesforce予定表);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSalesforce予定表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SharePointDataSet ds = new SharePointDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Salesforce予定表RowChangeEventHandler(object sender, Salesforce予定表RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Salesforce予定表DataTable : global::System.Data.TypedTableBase<Salesforce予定表Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnバージョン;
            
            private global::System.Data.DataColumn columnアプリの作成者;
            
            private global::System.Data.DataColumn columnアプリの作成者_ID;
            
            private global::System.Data.DataColumn columnアプリの変更者;
            
            private global::System.Data.DataColumn columnアプリの変更者_ID;
            
            private global::System.Data.DataColumn column添付ファイル;
            
            private global::System.Data.DataColumn column登録者;
            
            private global::System.Data.DataColumn column登録者_ID;
            
            private global::System.Data.DataColumn columnカテゴリ;
            
            private global::System.Data.DataColumn columnコンテンツ_タイプ;
            
            private global::System.Data.DataColumn column登録日時;
            
            private global::System.Data.DataColumn column説明;
            
            private global::System.Data.DataColumn column種類;
            
            private global::System.Data.DataColumn column編集;
            
            private global::System.Data.DataColumn column更新者;
            
            private global::System.Data.DataColumn column更新者_ID;
            
            private global::System.Data.DataColumn column終了時刻;
            
            private global::System.Data.DataColumn column開始時刻;
            
            private global::System.Data.DataColumn column設備;
            
            private global::System.Data.DataColumn column終日;
            
            private global::System.Data.DataColumn column子フォルダーの数;
            
            private global::System.Data.DataColumn column子フォルダーの数_ID;
            
            private global::System.Data.DataColumn column定期的なイベント;
            
            private global::System.Data.DataColumn column空き時間情報;
            
            private global::System.Data.DataColumn column子アイテムの数;
            
            private global::System.Data.DataColumn column子アイテムの数_ID;
            
            private global::System.Data.DataColumn columnタイトル;
            
            private global::System.Data.DataColumn columnタイトル2;
            
            private global::System.Data.DataColumn column場所;
            
            private global::System.Data.DataColumn column更新日時;
            
            private global::System.Data.DataColumn column重複予約のチェック;
            
            private global::System.Data.DataColumn column出席者;
            
            private global::System.Data.DataColumn columnタイトル3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Salesforce予定表DataTable() {
                this.TableName = "Salesforce予定表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Salesforce予定表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Salesforce予定表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn バージョンColumn {
                get {
                    return this.columnバージョン;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn アプリの作成者Column {
                get {
                    return this.columnアプリの作成者;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn アプリの作成者_IDColumn {
                get {
                    return this.columnアプリの作成者_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn アプリの変更者Column {
                get {
                    return this.columnアプリの変更者;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn アプリの変更者_IDColumn {
                get {
                    return this.columnアプリの変更者_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 添付ファイルColumn {
                get {
                    return this.column添付ファイル;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 登録者Column {
                get {
                    return this.column登録者;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 登録者_IDColumn {
                get {
                    return this.column登録者_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn カテゴリColumn {
                get {
                    return this.columnカテゴリ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn コンテンツ_タイプColumn {
                get {
                    return this.columnコンテンツ_タイプ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 登録日時Column {
                get {
                    return this.column登録日時;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 説明Column {
                get {
                    return this.column説明;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 種類Column {
                get {
                    return this.column種類;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 編集Column {
                get {
                    return this.column編集;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 更新者Column {
                get {
                    return this.column更新者;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 更新者_IDColumn {
                get {
                    return this.column更新者_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 終了時刻Column {
                get {
                    return this.column終了時刻;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 開始時刻Column {
                get {
                    return this.column開始時刻;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 設備Column {
                get {
                    return this.column設備;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 終日Column {
                get {
                    return this.column終日;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 子フォルダーの数Column {
                get {
                    return this.column子フォルダーの数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 子フォルダーの数_IDColumn {
                get {
                    return this.column子フォルダーの数_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 定期的なイベントColumn {
                get {
                    return this.column定期的なイベント;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 空き時間情報Column {
                get {
                    return this.column空き時間情報;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 子アイテムの数Column {
                get {
                    return this.column子アイテムの数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 子アイテムの数_IDColumn {
                get {
                    return this.column子アイテムの数_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn タイトルColumn {
                get {
                    return this.columnタイトル;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn タイトル2Column {
                get {
                    return this.columnタイトル2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 場所Column {
                get {
                    return this.column場所;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 更新日時Column {
                get {
                    return this.column更新日時;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 重複予約のチェックColumn {
                get {
                    return this.column重複予約のチェック;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出席者Column {
                get {
                    return this.column出席者;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn タイトル3Column {
                get {
                    return this.columnタイトル3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Salesforce予定表Row this[int index] {
                get {
                    return ((Salesforce予定表Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Salesforce予定表RowChangeEventHandler Salesforce予定表RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Salesforce予定表RowChangeEventHandler Salesforce予定表RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Salesforce予定表RowChangeEventHandler Salesforce予定表RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Salesforce予定表RowChangeEventHandler Salesforce予定表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSalesforce予定表Row(Salesforce予定表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Salesforce予定表Row AddSalesforce予定表Row(
                        int ID, 
                        string バージョン, 
                        string アプリの作成者, 
                        int アプリの作成者_ID, 
                        string アプリの変更者, 
                        int アプリの変更者_ID, 
                        string 添付ファイル, 
                        string 登録者, 
                        int 登録者_ID, 
                        string カテゴリ, 
                        string コンテンツ_タイプ, 
                        System.DateTime 登録日時, 
                        string 説明, 
                        string 種類, 
                        string 編集, 
                        string 更新者, 
                        int 更新者_ID, 
                        System.DateTime 終了時刻, 
                        System.DateTime 開始時刻, 
                        string 設備, 
                        string 終日, 
                        string 子フォルダーの数, 
                        int 子フォルダーの数_ID, 
                        string 定期的なイベント, 
                        string 空き時間情報, 
                        string 子アイテムの数, 
                        int 子アイテムの数_ID, 
                        string タイトル, 
                        string タイトル2, 
                        string 場所, 
                        System.DateTime 更新日時, 
                        string 重複予約のチェック, 
                        string 出席者, 
                        string タイトル3) {
                Salesforce予定表Row rowSalesforce予定表Row = ((Salesforce予定表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        バージョン,
                        アプリの作成者,
                        アプリの作成者_ID,
                        アプリの変更者,
                        アプリの変更者_ID,
                        添付ファイル,
                        登録者,
                        登録者_ID,
                        カテゴリ,
                        コンテンツ_タイプ,
                        登録日時,
                        説明,
                        種類,
                        編集,
                        更新者,
                        更新者_ID,
                        終了時刻,
                        開始時刻,
                        設備,
                        終日,
                        子フォルダーの数,
                        子フォルダーの数_ID,
                        定期的なイベント,
                        空き時間情報,
                        子アイテムの数,
                        子アイテムの数_ID,
                        タイトル,
                        タイトル2,
                        場所,
                        更新日時,
                        重複予約のチェック,
                        出席者,
                        タイトル3};
                rowSalesforce予定表Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesforce予定表Row);
                return rowSalesforce予定表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Salesforce予定表Row FindByID(int ID) {
                return ((Salesforce予定表Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Salesforce予定表DataTable cln = ((Salesforce予定表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Salesforce予定表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnバージョン = base.Columns["バージョン"];
                this.columnアプリの作成者 = base.Columns["アプリの作成者"];
                this.columnアプリの作成者_ID = base.Columns["アプリの作成者_ID"];
                this.columnアプリの変更者 = base.Columns["アプリの変更者"];
                this.columnアプリの変更者_ID = base.Columns["アプリの変更者_ID"];
                this.column添付ファイル = base.Columns["添付ファイル"];
                this.column登録者 = base.Columns["登録者"];
                this.column登録者_ID = base.Columns["登録者_ID"];
                this.columnカテゴリ = base.Columns["カテゴリ"];
                this.columnコンテンツ_タイプ = base.Columns["コンテンツ タイプ"];
                this.column登録日時 = base.Columns["登録日時"];
                this.column説明 = base.Columns["説明"];
                this.column種類 = base.Columns["種類"];
                this.column編集 = base.Columns["編集"];
                this.column更新者 = base.Columns["更新者"];
                this.column更新者_ID = base.Columns["更新者_ID"];
                this.column終了時刻 = base.Columns["終了時刻"];
                this.column開始時刻 = base.Columns["開始時刻"];
                this.column設備 = base.Columns["設備"];
                this.column終日 = base.Columns["終日"];
                this.column子フォルダーの数 = base.Columns["子フォルダーの数"];
                this.column子フォルダーの数_ID = base.Columns["子フォルダーの数_ID"];
                this.column定期的なイベント = base.Columns["定期的なイベント"];
                this.column空き時間情報 = base.Columns["空き時間情報"];
                this.column子アイテムの数 = base.Columns["子アイテムの数"];
                this.column子アイテムの数_ID = base.Columns["子アイテムの数_ID"];
                this.columnタイトル = base.Columns["タイトル"];
                this.columnタイトル2 = base.Columns["タイトル2"];
                this.column場所 = base.Columns["場所"];
                this.column更新日時 = base.Columns["更新日時"];
                this.column重複予約のチェック = base.Columns["重複予約のチェック"];
                this.column出席者 = base.Columns["出席者"];
                this.columnタイトル3 = base.Columns["タイトル3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnバージョン = new global::System.Data.DataColumn("バージョン", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnバージョン);
                this.columnアプリの作成者 = new global::System.Data.DataColumn("アプリの作成者", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnアプリの作成者);
                this.columnアプリの作成者_ID = new global::System.Data.DataColumn("アプリの作成者_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnアプリの作成者_ID);
                this.columnアプリの変更者 = new global::System.Data.DataColumn("アプリの変更者", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnアプリの変更者);
                this.columnアプリの変更者_ID = new global::System.Data.DataColumn("アプリの変更者_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnアプリの変更者_ID);
                this.column添付ファイル = new global::System.Data.DataColumn("添付ファイル", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column添付ファイル);
                this.column登録者 = new global::System.Data.DataColumn("登録者", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column登録者);
                this.column登録者_ID = new global::System.Data.DataColumn("登録者_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column登録者_ID);
                this.columnカテゴリ = new global::System.Data.DataColumn("カテゴリ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnカテゴリ);
                this.columnコンテンツ_タイプ = new global::System.Data.DataColumn("コンテンツ タイプ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnコンテンツ_タイプ);
                this.column登録日時 = new global::System.Data.DataColumn("登録日時", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column登録日時);
                this.column説明 = new global::System.Data.DataColumn("説明", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column説明);
                this.column種類 = new global::System.Data.DataColumn("種類", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column種類);
                this.column編集 = new global::System.Data.DataColumn("編集", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column編集);
                this.column更新者 = new global::System.Data.DataColumn("更新者", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column更新者);
                this.column更新者_ID = new global::System.Data.DataColumn("更新者_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column更新者_ID);
                this.column終了時刻 = new global::System.Data.DataColumn("終了時刻", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column終了時刻);
                this.column開始時刻 = new global::System.Data.DataColumn("開始時刻", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column開始時刻);
                this.column設備 = new global::System.Data.DataColumn("設備", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column設備);
                this.column終日 = new global::System.Data.DataColumn("終日", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column終日);
                this.column子フォルダーの数 = new global::System.Data.DataColumn("子フォルダーの数", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column子フォルダーの数);
                this.column子フォルダーの数_ID = new global::System.Data.DataColumn("子フォルダーの数_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column子フォルダーの数_ID);
                this.column定期的なイベント = new global::System.Data.DataColumn("定期的なイベント", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column定期的なイベント);
                this.column空き時間情報 = new global::System.Data.DataColumn("空き時間情報", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column空き時間情報);
                this.column子アイテムの数 = new global::System.Data.DataColumn("子アイテムの数", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column子アイテムの数);
                this.column子アイテムの数_ID = new global::System.Data.DataColumn("子アイテムの数_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column子アイテムの数_ID);
                this.columnタイトル = new global::System.Data.DataColumn("タイトル", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnタイトル);
                this.columnタイトル2 = new global::System.Data.DataColumn("タイトル2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnタイトル2);
                this.column場所 = new global::System.Data.DataColumn("場所", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column場所);
                this.column更新日時 = new global::System.Data.DataColumn("更新日時", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column更新日時);
                this.column重複予約のチェック = new global::System.Data.DataColumn("重複予約のチェック", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column重複予約のチェック);
                this.column出席者 = new global::System.Data.DataColumn("出席者", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出席者);
                this.columnタイトル3 = new global::System.Data.DataColumn("タイトル3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnタイトル3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnバージョン.ReadOnly = true;
                this.columnバージョン.MaxLength = 2000;
                this.columnアプリの作成者.ReadOnly = true;
                this.columnアプリの作成者.MaxLength = 2000;
                this.columnアプリの作成者_ID.ReadOnly = true;
                this.columnアプリの変更者.ReadOnly = true;
                this.columnアプリの変更者.MaxLength = 2000;
                this.columnアプリの変更者_ID.ReadOnly = true;
                this.column添付ファイル.MaxLength = 2000;
                this.column登録者.ReadOnly = true;
                this.column登録者.MaxLength = 2000;
                this.column登録者_ID.ReadOnly = true;
                this.columnカテゴリ.MaxLength = 2000;
                this.columnコンテンツ_タイプ.MaxLength = 2000;
                this.column登録日時.ReadOnly = true;
                this.column説明.MaxLength = 2000;
                this.column種類.ReadOnly = true;
                this.column種類.MaxLength = 2000;
                this.column編集.ReadOnly = true;
                this.column編集.MaxLength = 2000;
                this.column更新者.ReadOnly = true;
                this.column更新者.MaxLength = 2000;
                this.column更新者_ID.ReadOnly = true;
                this.column設備.MaxLength = 2000;
                this.column終日.MaxLength = 2000;
                this.column子フォルダーの数.ReadOnly = true;
                this.column子フォルダーの数.MaxLength = 2000;
                this.column子フォルダーの数_ID.ReadOnly = true;
                this.column定期的なイベント.MaxLength = 2000;
                this.column空き時間情報.MaxLength = 2000;
                this.column子アイテムの数.ReadOnly = true;
                this.column子アイテムの数.MaxLength = 2000;
                this.column子アイテムの数_ID.ReadOnly = true;
                this.columnタイトル.ReadOnly = true;
                this.columnタイトル.MaxLength = 2000;
                this.columnタイトル2.ReadOnly = true;
                this.columnタイトル2.MaxLength = 2000;
                this.column場所.MaxLength = 2000;
                this.column更新日時.ReadOnly = true;
                this.column重複予約のチェック.MaxLength = 2000;
                this.column出席者.MaxLength = 2000;
                this.columnタイトル3.MaxLength = 2000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Salesforce予定表Row NewSalesforce予定表Row() {
                return ((Salesforce予定表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Salesforce予定表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Salesforce予定表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Salesforce予定表RowChanged != null)) {
                    this.Salesforce予定表RowChanged(this, new Salesforce予定表RowChangeEvent(((Salesforce予定表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Salesforce予定表RowChanging != null)) {
                    this.Salesforce予定表RowChanging(this, new Salesforce予定表RowChangeEvent(((Salesforce予定表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Salesforce予定表RowDeleted != null)) {
                    this.Salesforce予定表RowDeleted(this, new Salesforce予定表RowChangeEvent(((Salesforce予定表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Salesforce予定表RowDeleting != null)) {
                    this.Salesforce予定表RowDeleting(this, new Salesforce予定表RowChangeEvent(((Salesforce予定表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSalesforce予定表Row(Salesforce予定表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SharePointDataSet ds = new SharePointDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Salesforce予定表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Salesforce予定表Row : global::System.Data.DataRow {
            
            private Salesforce予定表DataTable tableSalesforce予定表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Salesforce予定表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesforce予定表 = ((Salesforce予定表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableSalesforce予定表.IDColumn]));
                }
                set {
                    this[this.tableSalesforce予定表.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string バージョン {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.バージョンColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'バージョン\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.バージョンColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string アプリの作成者 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.アプリの作成者Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'アプリの作成者\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.アプリの作成者Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int アプリの作成者_ID {
                get {
                    try {
                        return ((int)(this[this.tableSalesforce予定表.アプリの作成者_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'アプリの作成者_ID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.アプリの作成者_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string アプリの変更者 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.アプリの変更者Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'アプリの変更者\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.アプリの変更者Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int アプリの変更者_ID {
                get {
                    try {
                        return ((int)(this[this.tableSalesforce予定表.アプリの変更者_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'アプリの変更者_ID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.アプリの変更者_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 添付ファイル {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.添付ファイルColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'添付ファイル\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.添付ファイルColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 登録者 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.登録者Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'登録者\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.登録者Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 登録者_ID {
                get {
                    try {
                        return ((int)(this[this.tableSalesforce予定表.登録者_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'登録者_ID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.登録者_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string カテゴリ {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.カテゴリColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'カテゴリ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.カテゴリColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string コンテンツ_タイプ {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.コンテンツ_タイプColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'コンテンツ タイプ\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.コンテンツ_タイプColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 登録日時 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesforce予定表.登録日時Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'登録日時\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.登録日時Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 説明 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.説明Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'説明\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.説明Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 種類 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.種類Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'種類\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.種類Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 編集 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.編集Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'編集\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.編集Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 更新者 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.更新者Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'更新者\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.更新者Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 更新者_ID {
                get {
                    try {
                        return ((int)(this[this.tableSalesforce予定表.更新者_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'更新者_ID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.更新者_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 終了時刻 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesforce予定表.終了時刻Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'終了時刻\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.終了時刻Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 開始時刻 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesforce予定表.開始時刻Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'開始時刻\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.開始時刻Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 設備 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.設備Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'設備\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.設備Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 終日 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.終日Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'終日\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.終日Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 子フォルダーの数 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.子フォルダーの数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'子フォルダーの数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.子フォルダーの数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 子フォルダーの数_ID {
                get {
                    try {
                        return ((int)(this[this.tableSalesforce予定表.子フォルダーの数_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'子フォルダーの数_ID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.子フォルダーの数_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 定期的なイベント {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.定期的なイベントColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'定期的なイベント\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.定期的なイベントColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 空き時間情報 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.空き時間情報Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'空き時間情報\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.空き時間情報Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 子アイテムの数 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.子アイテムの数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'子アイテムの数\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.子アイテムの数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 子アイテムの数_ID {
                get {
                    try {
                        return ((int)(this[this.tableSalesforce予定表.子アイテムの数_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'子アイテムの数_ID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.子アイテムの数_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string タイトル {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.タイトルColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'タイトル\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.タイトルColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string タイトル2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.タイトル2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'タイトル2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.タイトル2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 場所 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.場所Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'場所\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.場所Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 更新日時 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesforce予定表.更新日時Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'更新日時\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.更新日時Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 重複予約のチェック {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.重複予約のチェックColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'重複予約のチェック\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.重複予約のチェックColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 出席者 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.出席者Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'出席者\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.出席者Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string タイトル3 {
                get {
                    try {
                        return ((string)(this[this.tableSalesforce予定表.タイトル3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Salesforce予定表\' にある列 \'タイトル3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesforce予定表.タイトル3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsバージョンNull() {
                return this.IsNull(this.tableSalesforce予定表.バージョンColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetバージョンNull() {
                this[this.tableSalesforce予定表.バージョンColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isアプリの作成者Null() {
                return this.IsNull(this.tableSalesforce予定表.アプリの作成者Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setアプリの作成者Null() {
                this[this.tableSalesforce予定表.アプリの作成者Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isアプリの作成者_IDNull() {
                return this.IsNull(this.tableSalesforce予定表.アプリの作成者_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setアプリの作成者_IDNull() {
                this[this.tableSalesforce予定表.アプリの作成者_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isアプリの変更者Null() {
                return this.IsNull(this.tableSalesforce予定表.アプリの変更者Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setアプリの変更者Null() {
                this[this.tableSalesforce予定表.アプリの変更者Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isアプリの変更者_IDNull() {
                return this.IsNull(this.tableSalesforce予定表.アプリの変更者_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setアプリの変更者_IDNull() {
                this[this.tableSalesforce予定表.アプリの変更者_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is添付ファイルNull() {
                return this.IsNull(this.tableSalesforce予定表.添付ファイルColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set添付ファイルNull() {
                this[this.tableSalesforce予定表.添付ファイルColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is登録者Null() {
                return this.IsNull(this.tableSalesforce予定表.登録者Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set登録者Null() {
                this[this.tableSalesforce予定表.登録者Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is登録者_IDNull() {
                return this.IsNull(this.tableSalesforce予定表.登録者_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set登録者_IDNull() {
                this[this.tableSalesforce予定表.登録者_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsカテゴリNull() {
                return this.IsNull(this.tableSalesforce予定表.カテゴリColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetカテゴリNull() {
                this[this.tableSalesforce予定表.カテゴリColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isコンテンツ_タイプNull() {
                return this.IsNull(this.tableSalesforce予定表.コンテンツ_タイプColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setコンテンツ_タイプNull() {
                this[this.tableSalesforce予定表.コンテンツ_タイプColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is登録日時Null() {
                return this.IsNull(this.tableSalesforce予定表.登録日時Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set登録日時Null() {
                this[this.tableSalesforce予定表.登録日時Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is説明Null() {
                return this.IsNull(this.tableSalesforce予定表.説明Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set説明Null() {
                this[this.tableSalesforce予定表.説明Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is種類Null() {
                return this.IsNull(this.tableSalesforce予定表.種類Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set種類Null() {
                this[this.tableSalesforce予定表.種類Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is編集Null() {
                return this.IsNull(this.tableSalesforce予定表.編集Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set編集Null() {
                this[this.tableSalesforce予定表.編集Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is更新者Null() {
                return this.IsNull(this.tableSalesforce予定表.更新者Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set更新者Null() {
                this[this.tableSalesforce予定表.更新者Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is更新者_IDNull() {
                return this.IsNull(this.tableSalesforce予定表.更新者_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set更新者_IDNull() {
                this[this.tableSalesforce予定表.更新者_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is終了時刻Null() {
                return this.IsNull(this.tableSalesforce予定表.終了時刻Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set終了時刻Null() {
                this[this.tableSalesforce予定表.終了時刻Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is開始時刻Null() {
                return this.IsNull(this.tableSalesforce予定表.開始時刻Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set開始時刻Null() {
                this[this.tableSalesforce予定表.開始時刻Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is設備Null() {
                return this.IsNull(this.tableSalesforce予定表.設備Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set設備Null() {
                this[this.tableSalesforce予定表.設備Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is終日Null() {
                return this.IsNull(this.tableSalesforce予定表.終日Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set終日Null() {
                this[this.tableSalesforce予定表.終日Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is子フォルダーの数Null() {
                return this.IsNull(this.tableSalesforce予定表.子フォルダーの数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set子フォルダーの数Null() {
                this[this.tableSalesforce予定表.子フォルダーの数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is子フォルダーの数_IDNull() {
                return this.IsNull(this.tableSalesforce予定表.子フォルダーの数_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set子フォルダーの数_IDNull() {
                this[this.tableSalesforce予定表.子フォルダーの数_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is定期的なイベントNull() {
                return this.IsNull(this.tableSalesforce予定表.定期的なイベントColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set定期的なイベントNull() {
                this[this.tableSalesforce予定表.定期的なイベントColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is空き時間情報Null() {
                return this.IsNull(this.tableSalesforce予定表.空き時間情報Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set空き時間情報Null() {
                this[this.tableSalesforce予定表.空き時間情報Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is子アイテムの数Null() {
                return this.IsNull(this.tableSalesforce予定表.子アイテムの数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set子アイテムの数Null() {
                this[this.tableSalesforce予定表.子アイテムの数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is子アイテムの数_IDNull() {
                return this.IsNull(this.tableSalesforce予定表.子アイテムの数_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set子アイテムの数_IDNull() {
                this[this.tableSalesforce予定表.子アイテムの数_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsタイトルNull() {
                return this.IsNull(this.tableSalesforce予定表.タイトルColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetタイトルNull() {
                this[this.tableSalesforce予定表.タイトルColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isタイトル2Null() {
                return this.IsNull(this.tableSalesforce予定表.タイトル2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setタイトル2Null() {
                this[this.tableSalesforce予定表.タイトル2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is場所Null() {
                return this.IsNull(this.tableSalesforce予定表.場所Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set場所Null() {
                this[this.tableSalesforce予定表.場所Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is更新日時Null() {
                return this.IsNull(this.tableSalesforce予定表.更新日時Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set更新日時Null() {
                this[this.tableSalesforce予定表.更新日時Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is重複予約のチェックNull() {
                return this.IsNull(this.tableSalesforce予定表.重複予約のチェックColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set重複予約のチェックNull() {
                this[this.tableSalesforce予定表.重複予約のチェックColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is出席者Null() {
                return this.IsNull(this.tableSalesforce予定表.出席者Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set出席者Null() {
                this[this.tableSalesforce予定表.出席者Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isタイトル3Null() {
                return this.IsNull(this.tableSalesforce予定表.タイトル3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setタイトル3Null() {
                this[this.tableSalesforce予定表.タイトル3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Salesforce予定表RowChangeEvent : global::System.EventArgs {
            
            private Salesforce予定表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Salesforce予定表RowChangeEvent(Salesforce予定表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Salesforce予定表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Salesforce2SharePoint.SharePointDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Salesforce予定表TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.CData.SharePoint.SharePointDataAdapter _adapter;
        
        private global::System.Data.CData.SharePoint.SharePointConnection _connection;
        
        private global::System.Data.CData.SharePoint.SharePointTransaction _transaction;
        
        private global::System.Data.CData.SharePoint.SharePointCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Salesforce予定表TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.CData.SharePoint.SharePointDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.CData.SharePoint.SharePointConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.CData.SharePoint.SharePointCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.CData.SharePoint.SharePointTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.CData.SharePoint.SharePointCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.CData.SharePoint.SharePointDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Salesforce予定表";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("バージョン", "バージョン");
            tableMapping.ColumnMappings.Add("アプリの作成者", "アプリの作成者");
            tableMapping.ColumnMappings.Add("アプリの作成者_ID", "アプリの作成者_ID");
            tableMapping.ColumnMappings.Add("アプリの変更者", "アプリの変更者");
            tableMapping.ColumnMappings.Add("アプリの変更者_ID", "アプリの変更者_ID");
            tableMapping.ColumnMappings.Add("添付ファイル", "添付ファイル");
            tableMapping.ColumnMappings.Add("登録者", "登録者");
            tableMapping.ColumnMappings.Add("登録者_ID", "登録者_ID");
            tableMapping.ColumnMappings.Add("カテゴリ", "カテゴリ");
            tableMapping.ColumnMappings.Add("コンテンツ タイプ", "コンテンツ タイプ");
            tableMapping.ColumnMappings.Add("登録日時", "登録日時");
            tableMapping.ColumnMappings.Add("説明", "説明");
            tableMapping.ColumnMappings.Add("種類", "種類");
            tableMapping.ColumnMappings.Add("編集", "編集");
            tableMapping.ColumnMappings.Add("更新者", "更新者");
            tableMapping.ColumnMappings.Add("更新者_ID", "更新者_ID");
            tableMapping.ColumnMappings.Add("終了時刻", "終了時刻");
            tableMapping.ColumnMappings.Add("開始時刻", "開始時刻");
            tableMapping.ColumnMappings.Add("設備", "設備");
            tableMapping.ColumnMappings.Add("終日", "終日");
            tableMapping.ColumnMappings.Add("子フォルダーの数", "子フォルダーの数");
            tableMapping.ColumnMappings.Add("子フォルダーの数_ID", "子フォルダーの数_ID");
            tableMapping.ColumnMappings.Add("定期的なイベント", "定期的なイベント");
            tableMapping.ColumnMappings.Add("空き時間情報", "空き時間情報");
            tableMapping.ColumnMappings.Add("子アイテムの数", "子アイテムの数");
            tableMapping.ColumnMappings.Add("子アイテムの数_ID", "子アイテムの数_ID");
            tableMapping.ColumnMappings.Add("タイトル", "タイトル");
            tableMapping.ColumnMappings.Add("タイトル2", "タイトル2");
            tableMapping.ColumnMappings.Add("場所", "場所");
            tableMapping.ColumnMappings.Add("更新日時", "更新日時");
            tableMapping.ColumnMappings.Add("重複予約のチェック", "重複予約のチェック");
            tableMapping.ColumnMappings.Add("出席者", "出席者");
            tableMapping.ColumnMappings.Add("タイトル3", "タイトル3");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.CData.SharePoint.SharePointCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [CData].[SharePoint].[Salesforce予定表] WHERE (([ID] = @Original_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.CData.SharePoint.SharePointParameter param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@Original_ID";
            param.SourceColumn = "ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.CData.SharePoint.SharePointCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [CData].[SharePoint].[Salesforce予定表] ([添付ファイル], [カテゴリ], [コンテンツ タイプ], [説明], [終了時刻], [開始時刻], [設備], [終日], [定期的なイベント], [空き時間情報], [場所], [重複予約のチェック], [出席者], [タイトル3]) VALUES (@添付ファイル, @カテゴリ, @コンテンツ_タイプ, @説明, @終了時刻, @開始時刻, @設備, @終日, @定期的なイベント, @空き時間情報, @場所, @重複予約のチェック, @出席者, @タイトル3)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@添付ファイル";
            param.SourceColumn = "添付ファイル";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@カテゴリ";
            param.SourceColumn = "カテゴリ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@コンテンツ_タイプ";
            param.SourceColumn = "コンテンツ タイプ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@説明";
            param.SourceColumn = "説明";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@終了時刻";
            param.SourceColumn = "終了時刻";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@開始時刻";
            param.SourceColumn = "開始時刻";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@設備";
            param.SourceColumn = "設備";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@終日";
            param.SourceColumn = "終日";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@定期的なイベント";
            param.SourceColumn = "定期的なイベント";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@空き時間情報";
            param.SourceColumn = "空き時間情報";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@場所";
            param.SourceColumn = "場所";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@重複予約のチェック";
            param.SourceColumn = "重複予約のチェック";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@出席者";
            param.SourceColumn = "出席者";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@タイトル3";
            param.SourceColumn = "タイトル3";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.CData.SharePoint.SharePointCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [CData].[SharePoint].[Salesforce予定表] SET [添付ファイル] = @添付ファイル, [カテゴリ] = @カテゴリ, [コンテンツ タイプ] = @コンテンツ_タイプ, [説明] = @説明, [終了時刻] = @終了時刻, [開始時刻] = @開始時刻, [設備] = @設備, [終日] = @終日, [定期的なイベント] = @定期的なイベント, [空き時間情報] = @空き時間情報, [場所] = @場所, [重複予約のチェック] = @重複予約のチェック, [出席者] = @出席者, [タイトル3] = @タイトル3 WHERE (([ID] = @Original_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@添付ファイル";
            param.SourceColumn = "添付ファイル";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@カテゴリ";
            param.SourceColumn = "カテゴリ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@コンテンツ_タイプ";
            param.SourceColumn = "コンテンツ タイプ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@説明";
            param.SourceColumn = "説明";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@終了時刻";
            param.SourceColumn = "終了時刻";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@開始時刻";
            param.SourceColumn = "開始時刻";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@設備";
            param.SourceColumn = "設備";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@終日";
            param.SourceColumn = "終日";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@定期的なイベント";
            param.SourceColumn = "定期的なイベント";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@空き時間情報";
            param.SourceColumn = "空き時間情報";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@場所";
            param.SourceColumn = "場所";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@重複予約のチェック";
            param.SourceColumn = "重複予約のチェック";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@出席者";
            param.SourceColumn = "出席者";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@タイトル3";
            param.SourceColumn = "タイトル3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.CData.SharePoint.SharePointParameter();
            param.ParameterName = "@Original_ID";
            param.SourceColumn = "ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.CData.SharePoint.SharePointConnection();
            this._connection.ConnectionString = global::Salesforce2SharePoint.Properties.Settings.Default.ConnectionStringSharePoint;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.CData.SharePoint.SharePointCommand[1];
            this._commandCollection[0] = new global::System.Data.CData.SharePoint.SharePointCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [ID], [バージョン], [アプリの作成者], [アプリの作成者_ID], [アプリの変更者], [アプリの変更者_ID], [添付ファイル], [登録者], [登録者_ID], [カテゴリ], [コンテンツ タイプ], [登録日時], [説明], [種類], [編集], [更新者], [更新者_ID], [終了時刻], [開始時刻], [設備], [終日], [子フォルダーの数], [子フォルダーの数_ID], [定期的なイベント], [空き時間情報], [子アイテムの数], [子アイテムの数_ID], [タイトル], [タイトル2], [場所], [更新日時], [重複予約のチェック], [出席者], [タイトル3] FROM [Salesforce予定表]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SharePointDataSet.Salesforce予定表DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SharePointDataSet.Salesforce予定表DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SharePointDataSet.Salesforce予定表DataTable dataTable = new SharePointDataSet.Salesforce予定表DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SharePointDataSet.Salesforce予定表DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SharePointDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Salesforce予定表");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(object Original_ID) {
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(Original_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(object 添付ファイル, object カテゴリ, object コンテンツ_タイプ, object 説明, object 終了時刻, object 開始時刻, object 設備, object 終日, object 定期的なイベント, object 空き時間情報, object 場所, object 重複予約のチェック, object 出席者, object タイトル3) {
            if ((添付ファイル == null)) {
                throw new global::System.ArgumentNullException("添付ファイル");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((object)(添付ファイル));
            }
            if ((カテゴリ == null)) {
                throw new global::System.ArgumentNullException("カテゴリ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((object)(カテゴリ));
            }
            if ((コンテンツ_タイプ == null)) {
                throw new global::System.ArgumentNullException("コンテンツ_タイプ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((object)(コンテンツ_タイプ));
            }
            if ((説明 == null)) {
                throw new global::System.ArgumentNullException("説明");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((object)(説明));
            }
            if ((終了時刻 == null)) {
                throw new global::System.ArgumentNullException("終了時刻");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((object)(終了時刻));
            }
            if ((開始時刻 == null)) {
                throw new global::System.ArgumentNullException("開始時刻");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((object)(開始時刻));
            }
            if ((設備 == null)) {
                throw new global::System.ArgumentNullException("設備");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((object)(設備));
            }
            if ((終日 == null)) {
                throw new global::System.ArgumentNullException("終日");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((object)(終日));
            }
            if ((定期的なイベント == null)) {
                throw new global::System.ArgumentNullException("定期的なイベント");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((object)(定期的なイベント));
            }
            if ((空き時間情報 == null)) {
                throw new global::System.ArgumentNullException("空き時間情報");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((object)(空き時間情報));
            }
            if ((場所 == null)) {
                throw new global::System.ArgumentNullException("場所");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((object)(場所));
            }
            if ((重複予約のチェック == null)) {
                throw new global::System.ArgumentNullException("重複予約のチェック");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((object)(重複予約のチェック));
            }
            if ((出席者 == null)) {
                throw new global::System.ArgumentNullException("出席者");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((object)(出席者));
            }
            if ((タイトル3 == null)) {
                throw new global::System.ArgumentNullException("タイトル3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((object)(タイトル3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(object 添付ファイル, object カテゴリ, object コンテンツ_タイプ, object 説明, object 終了時刻, object 開始時刻, object 設備, object 終日, object 定期的なイベント, object 空き時間情報, object 場所, object 重複予約のチェック, object 出席者, object タイトル3, object Original_ID) {
            if ((添付ファイル == null)) {
                throw new global::System.ArgumentNullException("添付ファイル");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((object)(添付ファイル));
            }
            if ((カテゴリ == null)) {
                throw new global::System.ArgumentNullException("カテゴリ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((object)(カテゴリ));
            }
            if ((コンテンツ_タイプ == null)) {
                throw new global::System.ArgumentNullException("コンテンツ_タイプ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(コンテンツ_タイプ));
            }
            if ((説明 == null)) {
                throw new global::System.ArgumentNullException("説明");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(説明));
            }
            if ((終了時刻 == null)) {
                throw new global::System.ArgumentNullException("終了時刻");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(終了時刻));
            }
            if ((開始時刻 == null)) {
                throw new global::System.ArgumentNullException("開始時刻");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(開始時刻));
            }
            if ((設備 == null)) {
                throw new global::System.ArgumentNullException("設備");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(設備));
            }
            if ((終日 == null)) {
                throw new global::System.ArgumentNullException("終日");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(終日));
            }
            if ((定期的なイベント == null)) {
                throw new global::System.ArgumentNullException("定期的なイベント");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(定期的なイベント));
            }
            if ((空き時間情報 == null)) {
                throw new global::System.ArgumentNullException("空き時間情報");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(空き時間情報));
            }
            if ((場所 == null)) {
                throw new global::System.ArgumentNullException("場所");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(場所));
            }
            if ((重複予約のチェック == null)) {
                throw new global::System.ArgumentNullException("重複予約のチェック");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(重複予約のチェック));
            }
            if ((出席者 == null)) {
                throw new global::System.ArgumentNullException("出席者");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(出席者));
            }
            if ((タイトル3 == null)) {
                throw new global::System.ArgumentNullException("タイトル3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(タイトル3));
            }
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(Original_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Salesforce予定表TableAdapter _salesforce予定表TableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Salesforce予定表TableAdapter Salesforce予定表TableAdapter {
            get {
                return this._salesforce予定表TableAdapter;
            }
            set {
                this._salesforce予定表TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._salesforce予定表TableAdapter != null) 
                            && (this._salesforce予定表TableAdapter.Connection != null))) {
                    return this._salesforce予定表TableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._salesforce予定表TableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(SharePointDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._salesforce予定表TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Salesforce予定表.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._salesforce予定表TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(SharePointDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._salesforce予定表TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Salesforce予定表.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._salesforce予定表TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(SharePointDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._salesforce予定表TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Salesforce予定表.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._salesforce予定表TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(SharePointDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._salesforce予定表TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._salesforce予定表TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager には接続情報がありません。それぞれの TableAdapterManager TableAdapter プロパティを有効な" +
                        " TableAdapter インスタンスに設定してください。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("トランザクションを開始できません。現在のデータ接続がトランザクションをサポートしていないか、または現在の状態がトランザクションの開始を許可していません。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._salesforce予定表TableAdapter != null)) {
                    revertConnections.Add(this._salesforce予定表TableAdapter, this._salesforce予定表TableAdapter.Connection);
                    this._salesforce予定表TableAdapter.Connection = ((global::System.Data.CData.SharePoint.SharePointConnection)(workConnection));
                    this._salesforce予定表TableAdapter.Transaction = ((global::System.Data.CData.SharePoint.SharePointTransaction)(workTransaction));
                    if (this._salesforce予定表TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._salesforce予定表TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._salesforce予定表TableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._salesforce予定表TableAdapter != null)) {
                    this._salesforce予定表TableAdapter.Connection = ((global::System.Data.CData.SharePoint.SharePointConnection)(revertConnections[this._salesforce予定表TableAdapter]));
                    this._salesforce予定表TableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591